#include "main.h"

/**
 * _printf - Prints formatted output to stdout.
 *
 * @format: A format string containing the characters and directives to be
 * printed to stdout.
 * @...: A variable number of arguments to be printed according to the
 * directives in the format string.
 *
 * Return: The number of characters printed to stdout excluding the null byte.
 * If an error occurs or format is NULL, returns -1 and sets errno appropriately.
 */
int _printf(const char *format, ...)
{
	va_list args;
	int num_chars_printed = 0;

	if (format == NULL)
	{
		errno = EINVAL;
		return (-1);
	}

	va_start(args, format);

	while (*format)
	{
		if (*format == '%')
		{
			format++;

			if (*format == '\0')
			{
				errno = EINVAL;
				return (-1);
			}

			if (*format == '%')
			{
				num_chars_printed += _putchar('%');
			}
			else if (*format == 'c')
			{
				num_chars_printed += print_char(args, NULL);
			}
			else if (*format == 's')
			{
				num_chars_printed += print_string(args, NULL);
			}
			else
			{
				num_chars_printed += _putchar('%');
				num_chars_printed += _putchar(*format);
			}
		}
		else
		{
			num_chars_printed += _putchar(*format);
		}

		format++;
	}

	va_end(args);

	return (num_chars_printed);
}
